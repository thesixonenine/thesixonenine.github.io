# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.111.3
    steps:
      - name: Setup Ruby Pkgs
        uses: ruby/setup-ruby-pkgs@v1.32.4
        with:
          ruby-version: 3.2.2
      - name: Install asciidoctor
        run: |
          sudo apt-get install -y asciidoctor
          gem install asciidoctor-diagram
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'hugo'
          submodules: recursive
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo --gc --minify
      - name: Deploy to Github Pages
        env:
          GIT_NAME: Simple
          GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
          REPO_NAME: thesixonenine.github.io
          REPO: github.com/thesixonenine/thesixonenine.github.io
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          mkdir ./tmp
          cd tmp/
          git clone -b master "https://$GH_TOKEN@$REPO"
          mv ./$REPO_NAME/.git/ ./
          rm -rf ./$REPO_NAME/*
          mv ./.git ./$REPO_NAME/
          mv ../public/* ./$REPO_NAME/
          cd $REPO_NAME/
          git add .
          git config --global user.name $GIT_NAME
          git config --global user.email $GIT_EMAIL
          git commit -m "Site deployed by GitHub Actions"
          git push
